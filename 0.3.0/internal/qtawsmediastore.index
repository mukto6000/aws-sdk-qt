<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="AWS MediaStore SDK for Qt" version="" project="QtAwsMediaStore" indexTitle="qtawsmediastore-index.html">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="qtawsmediastore">
        <namespace threadsafety="unspecified" name="QtAws" href="qtaws.html" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="25" module="QtAws" brief="Parent namespace for all other QtAws namespaces">
            <namespace threadsafety="unspecified" name="MediaStore" fullname="QtAws::MediaStore" href="qtaws-mediastore.html" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="26" module="QtAwsMediaStore" brief="Contains classess for accessing AWS Elemental MediaStore">
                <class threadsafety="unspecified" name="CreateContainerRequest" fullname="QtAws::MediaStore::CreateContainerRequest" href="qtaws-mediastore-createcontainerrequest.html" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore CreateContainer requests">
                    <function threadsafety="unspecified" name="CreateContainerRequest" fullname="QtAws::MediaStore::CreateContainerRequest::CreateContainerRequest" href="qtaws-mediastore-createcontainerrequest.html#CreateContainerRequest-1" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerRequest()"/>
                    <function threadsafety="unspecified" name="CreateContainerRequest" fullname="QtAws::MediaStore::CreateContainerRequest::CreateContainerRequest" href="qtaws-mediastore-createcontainerrequest.html#CreateContainerRequest" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerRequest(const CreateContainerRequest &amp;other)">
                        <parameter left="const CreateContainerRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::CreateContainerRequest::response" href="qtaws-mediastore-createcontainerrequest.html#response" status="active" access="protected" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::CreateContainerRequest::isValid" href="qtaws-mediastore-createcontainerrequest.html#isValid" status="active" access="public" location="createcontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="CreateContainerRequestPrivate" fullname="QtAws::MediaStore::CreateContainerRequestPrivate" href="qtaws-mediastore-createcontainerrequestprivate.html" status="active" access="public" location="createcontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for CreateContainerRequest">
                    <function threadsafety="unspecified" name="CreateContainerRequestPrivate" fullname="QtAws::MediaStore::CreateContainerRequestPrivate::CreateContainerRequestPrivate" href="qtaws-mediastore-createcontainerrequestprivate.html#CreateContainerRequestPrivate-1" status="active" access="public" location="createcontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerRequestPrivate(const CreateContainerRequestPrivate &amp;other, CreateContainerRequest * const q)">
                        <parameter left="const CreateContainerRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="CreateContainerRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="CreateContainerRequestPrivate" fullname="QtAws::MediaStore::CreateContainerRequestPrivate::CreateContainerRequestPrivate" href="qtaws-mediastore-createcontainerrequestprivate.html#CreateContainerRequestPrivate" status="active" access="public" location="createcontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerRequestPrivate(const MediaStoreRequest::Action action, CreateContainerRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="CreateContainerRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CreateContainerResponse" fullname="QtAws::MediaStore::CreateContainerResponse" href="qtaws-mediastore-createcontainerresponse.html" status="active" access="public" location="createcontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore CreateContainer responses">
                    <function threadsafety="unspecified" name="CreateContainerResponse" fullname="QtAws::MediaStore::CreateContainerResponse::CreateContainerResponse" href="qtaws-mediastore-createcontainerresponse.html#CreateContainerResponse" status="active" access="public" location="createcontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerResponse(const CreateContainerRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const CreateContainerRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::CreateContainerResponse::parseSuccess" href="qtaws-mediastore-createcontainerresponse.html#parseSuccess" status="active" access="protected" location="createcontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::CreateContainerResponse::request" href="qtaws-mediastore-createcontainerresponse.html#request" status="active" access="public" location="createcontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const CreateContainerRequest *" signature="const CreateContainerRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="CreateContainerResponsePrivate" fullname="QtAws::MediaStore::CreateContainerResponsePrivate" href="qtaws-mediastore-createcontainerresponseprivate.html" status="active" access="public" location="createcontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for CreateContainerResponse">
                    <function threadsafety="unspecified" name="CreateContainerResponsePrivate" fullname="QtAws::MediaStore::CreateContainerResponsePrivate::CreateContainerResponsePrivate" href="qtaws-mediastore-createcontainerresponseprivate.html#CreateContainerResponsePrivate" status="active" access="public" location="createcontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CreateContainerResponsePrivate(CreateContainerResponse * const q)">
                        <parameter left="CreateContainerResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseCreateContainerResponse" fullname="QtAws::MediaStore::CreateContainerResponsePrivate::parseCreateContainerResponse" href="qtaws-mediastore-createcontainerresponseprivate.html#parseCreateContainerResponse" status="active" access="public" location="createcontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/createcontainerresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseCreateContainerResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerPolicyRequest" fullname="QtAws::MediaStore::DeleteContainerPolicyRequest" href="qtaws-mediastore-deletecontainerpolicyrequest.html" status="active" access="public" location="deletecontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore DeleteContainerPolicy requests">
                    <function threadsafety="unspecified" name="DeleteContainerPolicyRequest" fullname="QtAws::MediaStore::DeleteContainerPolicyRequest::DeleteContainerPolicyRequest" href="qtaws-mediastore-deletecontainerpolicyrequest.html#DeleteContainerPolicyRequest-1" status="active" access="public" location="deletecontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyRequest()"/>
                    <function threadsafety="unspecified" name="DeleteContainerPolicyRequest" fullname="QtAws::MediaStore::DeleteContainerPolicyRequest::DeleteContainerPolicyRequest" href="qtaws-mediastore-deletecontainerpolicyrequest.html#DeleteContainerPolicyRequest" status="active" access="public" location="deletecontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyRequest(const DeleteContainerPolicyRequest &amp;other)">
                        <parameter left="const DeleteContainerPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::DeleteContainerPolicyRequest::response" href="qtaws-mediastore-deletecontainerpolicyrequest.html#response" status="active" access="protected" location="deletecontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::DeleteContainerPolicyRequest::isValid" href="qtaws-mediastore-deletecontainerpolicyrequest.html#isValid" status="active" access="public" location="deletecontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerPolicyRequestPrivate" href="qtaws-mediastore-deletecontainerpolicyrequestprivate.html" status="active" access="public" location="deletecontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteContainerPolicyRequest">
                    <function threadsafety="unspecified" name="DeleteContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerPolicyRequestPrivate::DeleteContainerPolicyRequestPrivate" href="qtaws-mediastore-deletecontainerpolicyrequestprivate.html#DeleteContainerPolicyRequestPrivate-1" status="active" access="public" location="deletecontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyRequestPrivate(const DeleteContainerPolicyRequestPrivate &amp;other, DeleteContainerPolicyRequest * const q)">
                        <parameter left="const DeleteContainerPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="DeleteContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DeleteContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerPolicyRequestPrivate::DeleteContainerPolicyRequestPrivate" href="qtaws-mediastore-deletecontainerpolicyrequestprivate.html#DeleteContainerPolicyRequestPrivate" status="active" access="public" location="deletecontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyRequestPrivate(const MediaStoreRequest::Action action, DeleteContainerPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="DeleteContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerPolicyResponse" fullname="QtAws::MediaStore::DeleteContainerPolicyResponse" href="qtaws-mediastore-deletecontainerpolicyresponse.html" status="active" access="public" location="deletecontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore DeleteContainerPolicy responses">
                    <function threadsafety="unspecified" name="DeleteContainerPolicyResponse" fullname="QtAws::MediaStore::DeleteContainerPolicyResponse::DeleteContainerPolicyResponse" href="qtaws-mediastore-deletecontainerpolicyresponse.html#DeleteContainerPolicyResponse" status="active" access="public" location="deletecontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyResponse(const DeleteContainerPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const DeleteContainerPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::DeleteContainerPolicyResponse::parseSuccess" href="qtaws-mediastore-deletecontainerpolicyresponse.html#parseSuccess" status="active" access="protected" location="deletecontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::DeleteContainerPolicyResponse::request" href="qtaws-mediastore-deletecontainerpolicyresponse.html#request" status="active" access="public" location="deletecontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const DeleteContainerPolicyRequest *" signature="const DeleteContainerPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::DeleteContainerPolicyResponsePrivate" href="qtaws-mediastore-deletecontainerpolicyresponseprivate.html" status="active" access="public" location="deletecontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteContainerPolicyResponse">
                    <function threadsafety="unspecified" name="DeleteContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::DeleteContainerPolicyResponsePrivate::DeleteContainerPolicyResponsePrivate" href="qtaws-mediastore-deletecontainerpolicyresponseprivate.html#DeleteContainerPolicyResponsePrivate" status="active" access="public" location="deletecontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerPolicyResponsePrivate(DeleteContainerPolicyResponse * const q)">
                        <parameter left="DeleteContainerPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseDeleteContainerPolicyResponse" fullname="QtAws::MediaStore::DeleteContainerPolicyResponsePrivate::parseDeleteContainerPolicyResponse" href="qtaws-mediastore-deletecontainerpolicyresponseprivate.html#parseDeleteContainerPolicyResponse" status="active" access="public" location="deletecontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerpolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseDeleteContainerPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerRequest" fullname="QtAws::MediaStore::DeleteContainerRequest" href="qtaws-mediastore-deletecontainerrequest.html" status="active" access="public" location="deletecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore DeleteContainer requests">
                    <function threadsafety="unspecified" name="DeleteContainerRequest" fullname="QtAws::MediaStore::DeleteContainerRequest::DeleteContainerRequest" href="qtaws-mediastore-deletecontainerrequest.html#DeleteContainerRequest-1" status="active" access="public" location="deletecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerRequest()"/>
                    <function threadsafety="unspecified" name="DeleteContainerRequest" fullname="QtAws::MediaStore::DeleteContainerRequest::DeleteContainerRequest" href="qtaws-mediastore-deletecontainerrequest.html#DeleteContainerRequest" status="active" access="public" location="deletecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerRequest(const DeleteContainerRequest &amp;other)">
                        <parameter left="const DeleteContainerRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::DeleteContainerRequest::response" href="qtaws-mediastore-deletecontainerrequest.html#response" status="active" access="protected" location="deletecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::DeleteContainerRequest::isValid" href="qtaws-mediastore-deletecontainerrequest.html#isValid" status="active" access="public" location="deletecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerRequestPrivate" href="qtaws-mediastore-deletecontainerrequestprivate.html" status="active" access="public" location="deletecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteContainerRequest">
                    <function threadsafety="unspecified" name="DeleteContainerRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerRequestPrivate::DeleteContainerRequestPrivate" href="qtaws-mediastore-deletecontainerrequestprivate.html#DeleteContainerRequestPrivate-1" status="active" access="public" location="deletecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerRequestPrivate(const DeleteContainerRequestPrivate &amp;other, DeleteContainerRequest * const q)">
                        <parameter left="const DeleteContainerRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="DeleteContainerRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DeleteContainerRequestPrivate" fullname="QtAws::MediaStore::DeleteContainerRequestPrivate::DeleteContainerRequestPrivate" href="qtaws-mediastore-deletecontainerrequestprivate.html#DeleteContainerRequestPrivate" status="active" access="public" location="deletecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerRequestPrivate(const MediaStoreRequest::Action action, DeleteContainerRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="DeleteContainerRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerResponse" fullname="QtAws::MediaStore::DeleteContainerResponse" href="qtaws-mediastore-deletecontainerresponse.html" status="active" access="public" location="deletecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore DeleteContainer responses">
                    <function threadsafety="unspecified" name="DeleteContainerResponse" fullname="QtAws::MediaStore::DeleteContainerResponse::DeleteContainerResponse" href="qtaws-mediastore-deletecontainerresponse.html#DeleteContainerResponse" status="active" access="public" location="deletecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerResponse(const DeleteContainerRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const DeleteContainerRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::DeleteContainerResponse::parseSuccess" href="qtaws-mediastore-deletecontainerresponse.html#parseSuccess" status="active" access="protected" location="deletecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::DeleteContainerResponse::request" href="qtaws-mediastore-deletecontainerresponse.html#request" status="active" access="public" location="deletecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const DeleteContainerRequest *" signature="const DeleteContainerRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteContainerResponsePrivate" fullname="QtAws::MediaStore::DeleteContainerResponsePrivate" href="qtaws-mediastore-deletecontainerresponseprivate.html" status="active" access="public" location="deletecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteContainerResponse">
                    <function threadsafety="unspecified" name="DeleteContainerResponsePrivate" fullname="QtAws::MediaStore::DeleteContainerResponsePrivate::DeleteContainerResponsePrivate" href="qtaws-mediastore-deletecontainerresponseprivate.html#DeleteContainerResponsePrivate" status="active" access="public" location="deletecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteContainerResponsePrivate(DeleteContainerResponse * const q)">
                        <parameter left="DeleteContainerResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseDeleteContainerResponse" fullname="QtAws::MediaStore::DeleteContainerResponsePrivate::parseDeleteContainerResponse" href="qtaws-mediastore-deletecontainerresponseprivate.html#parseDeleteContainerResponse" status="active" access="public" location="deletecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecontainerresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseDeleteContainerResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteCorsPolicyRequest" fullname="QtAws::MediaStore::DeleteCorsPolicyRequest" href="qtaws-mediastore-deletecorspolicyrequest.html" status="active" access="public" location="deletecorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore DeleteCorsPolicy requests">
                    <function threadsafety="unspecified" name="DeleteCorsPolicyRequest" fullname="QtAws::MediaStore::DeleteCorsPolicyRequest::DeleteCorsPolicyRequest" href="qtaws-mediastore-deletecorspolicyrequest.html#DeleteCorsPolicyRequest-1" status="active" access="public" location="deletecorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyRequest()"/>
                    <function threadsafety="unspecified" name="DeleteCorsPolicyRequest" fullname="QtAws::MediaStore::DeleteCorsPolicyRequest::DeleteCorsPolicyRequest" href="qtaws-mediastore-deletecorspolicyrequest.html#DeleteCorsPolicyRequest" status="active" access="public" location="deletecorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyRequest(const DeleteCorsPolicyRequest &amp;other)">
                        <parameter left="const DeleteCorsPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::DeleteCorsPolicyRequest::response" href="qtaws-mediastore-deletecorspolicyrequest.html#response" status="active" access="protected" location="deletecorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::DeleteCorsPolicyRequest::isValid" href="qtaws-mediastore-deletecorspolicyrequest.html#isValid" status="active" access="public" location="deletecorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteCorsPolicyRequestPrivate" href="qtaws-mediastore-deletecorspolicyrequestprivate.html" status="active" access="public" location="deletecorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteCorsPolicyRequest">
                    <function threadsafety="unspecified" name="DeleteCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteCorsPolicyRequestPrivate::DeleteCorsPolicyRequestPrivate" href="qtaws-mediastore-deletecorspolicyrequestprivate.html#DeleteCorsPolicyRequestPrivate-1" status="active" access="public" location="deletecorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyRequestPrivate(const DeleteCorsPolicyRequestPrivate &amp;other, DeleteCorsPolicyRequest * const q)">
                        <parameter left="const DeleteCorsPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="DeleteCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DeleteCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::DeleteCorsPolicyRequestPrivate::DeleteCorsPolicyRequestPrivate" href="qtaws-mediastore-deletecorspolicyrequestprivate.html#DeleteCorsPolicyRequestPrivate" status="active" access="public" location="deletecorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyRequestPrivate(const MediaStoreRequest::Action action, DeleteCorsPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="DeleteCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeleteCorsPolicyResponse" fullname="QtAws::MediaStore::DeleteCorsPolicyResponse" href="qtaws-mediastore-deletecorspolicyresponse.html" status="active" access="public" location="deletecorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore DeleteCorsPolicy responses">
                    <function threadsafety="unspecified" name="DeleteCorsPolicyResponse" fullname="QtAws::MediaStore::DeleteCorsPolicyResponse::DeleteCorsPolicyResponse" href="qtaws-mediastore-deletecorspolicyresponse.html#DeleteCorsPolicyResponse" status="active" access="public" location="deletecorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyResponse(const DeleteCorsPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const DeleteCorsPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::DeleteCorsPolicyResponse::parseSuccess" href="qtaws-mediastore-deletecorspolicyresponse.html#parseSuccess" status="active" access="protected" location="deletecorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::DeleteCorsPolicyResponse::request" href="qtaws-mediastore-deletecorspolicyresponse.html#request" status="active" access="public" location="deletecorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const DeleteCorsPolicyRequest *" signature="const DeleteCorsPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="DeleteCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::DeleteCorsPolicyResponsePrivate" href="qtaws-mediastore-deletecorspolicyresponseprivate.html" status="active" access="public" location="deletecorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for DeleteCorsPolicyResponse">
                    <function threadsafety="unspecified" name="DeleteCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::DeleteCorsPolicyResponsePrivate::DeleteCorsPolicyResponsePrivate" href="qtaws-mediastore-deletecorspolicyresponseprivate.html#DeleteCorsPolicyResponsePrivate" status="active" access="public" location="deletecorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeleteCorsPolicyResponsePrivate(DeleteCorsPolicyResponse * const q)">
                        <parameter left="DeleteCorsPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseDeleteCorsPolicyResponse" fullname="QtAws::MediaStore::DeleteCorsPolicyResponsePrivate::parseDeleteCorsPolicyResponse" href="qtaws-mediastore-deletecorspolicyresponseprivate.html#parseDeleteCorsPolicyResponse" status="active" access="public" location="deletecorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/deletecorspolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseDeleteCorsPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DescribeContainerRequest" fullname="QtAws::MediaStore::DescribeContainerRequest" href="qtaws-mediastore-describecontainerrequest.html" status="active" access="public" location="describecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore DescribeContainer requests">
                    <function threadsafety="unspecified" name="DescribeContainerRequest" fullname="QtAws::MediaStore::DescribeContainerRequest::DescribeContainerRequest" href="qtaws-mediastore-describecontainerrequest.html#DescribeContainerRequest-1" status="active" access="public" location="describecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerRequest()"/>
                    <function threadsafety="unspecified" name="DescribeContainerRequest" fullname="QtAws::MediaStore::DescribeContainerRequest::DescribeContainerRequest" href="qtaws-mediastore-describecontainerrequest.html#DescribeContainerRequest" status="active" access="public" location="describecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerRequest(const DescribeContainerRequest &amp;other)">
                        <parameter left="const DescribeContainerRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::DescribeContainerRequest::response" href="qtaws-mediastore-describecontainerrequest.html#response" status="active" access="protected" location="describecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::DescribeContainerRequest::isValid" href="qtaws-mediastore-describecontainerrequest.html#isValid" status="active" access="public" location="describecontainerrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="DescribeContainerRequestPrivate" fullname="QtAws::MediaStore::DescribeContainerRequestPrivate" href="qtaws-mediastore-describecontainerrequestprivate.html" status="active" access="public" location="describecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for DescribeContainerRequest">
                    <function threadsafety="unspecified" name="DescribeContainerRequestPrivate" fullname="QtAws::MediaStore::DescribeContainerRequestPrivate::DescribeContainerRequestPrivate" href="qtaws-mediastore-describecontainerrequestprivate.html#DescribeContainerRequestPrivate-1" status="active" access="public" location="describecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerRequestPrivate(const DescribeContainerRequestPrivate &amp;other, DescribeContainerRequest * const q)">
                        <parameter left="const DescribeContainerRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="DescribeContainerRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DescribeContainerRequestPrivate" fullname="QtAws::MediaStore::DescribeContainerRequestPrivate::DescribeContainerRequestPrivate" href="qtaws-mediastore-describecontainerrequestprivate.html#DescribeContainerRequestPrivate" status="active" access="public" location="describecontainerrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerRequestPrivate(const MediaStoreRequest::Action action, DescribeContainerRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="DescribeContainerRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DescribeContainerResponse" fullname="QtAws::MediaStore::DescribeContainerResponse" href="qtaws-mediastore-describecontainerresponse.html" status="active" access="public" location="describecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore DescribeContainer responses">
                    <function threadsafety="unspecified" name="DescribeContainerResponse" fullname="QtAws::MediaStore::DescribeContainerResponse::DescribeContainerResponse" href="qtaws-mediastore-describecontainerresponse.html#DescribeContainerResponse" status="active" access="public" location="describecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerResponse(const DescribeContainerRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const DescribeContainerRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::DescribeContainerResponse::parseSuccess" href="qtaws-mediastore-describecontainerresponse.html#parseSuccess" status="active" access="protected" location="describecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::DescribeContainerResponse::request" href="qtaws-mediastore-describecontainerresponse.html#request" status="active" access="public" location="describecontainerresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const DescribeContainerRequest *" signature="const DescribeContainerRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="DescribeContainerResponsePrivate" fullname="QtAws::MediaStore::DescribeContainerResponsePrivate" href="qtaws-mediastore-describecontainerresponseprivate.html" status="active" access="public" location="describecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for DescribeContainerResponse">
                    <function threadsafety="unspecified" name="DescribeContainerResponsePrivate" fullname="QtAws::MediaStore::DescribeContainerResponsePrivate::DescribeContainerResponsePrivate" href="qtaws-mediastore-describecontainerresponseprivate.html#DescribeContainerResponsePrivate" status="active" access="public" location="describecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescribeContainerResponsePrivate(DescribeContainerResponse * const q)">
                        <parameter left="DescribeContainerResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseDescribeContainerResponse" fullname="QtAws::MediaStore::DescribeContainerResponsePrivate::parseDescribeContainerResponse" href="qtaws-mediastore-describecontainerresponseprivate.html#parseDescribeContainerResponse" status="active" access="public" location="describecontainerresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/describecontainerresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseDescribeContainerResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GetContainerPolicyRequest" fullname="QtAws::MediaStore::GetContainerPolicyRequest" href="qtaws-mediastore-getcontainerpolicyrequest.html" status="active" access="public" location="getcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore GetContainerPolicy requests">
                    <function threadsafety="unspecified" name="GetContainerPolicyRequest" fullname="QtAws::MediaStore::GetContainerPolicyRequest::GetContainerPolicyRequest" href="qtaws-mediastore-getcontainerpolicyrequest.html#GetContainerPolicyRequest-1" status="active" access="public" location="getcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyRequest()"/>
                    <function threadsafety="unspecified" name="GetContainerPolicyRequest" fullname="QtAws::MediaStore::GetContainerPolicyRequest::GetContainerPolicyRequest" href="qtaws-mediastore-getcontainerpolicyrequest.html#GetContainerPolicyRequest" status="active" access="public" location="getcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyRequest(const GetContainerPolicyRequest &amp;other)">
                        <parameter left="const GetContainerPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::GetContainerPolicyRequest::response" href="qtaws-mediastore-getcontainerpolicyrequest.html#response" status="active" access="protected" location="getcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::GetContainerPolicyRequest::isValid" href="qtaws-mediastore-getcontainerpolicyrequest.html#isValid" status="active" access="public" location="getcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::GetContainerPolicyRequestPrivate" href="qtaws-mediastore-getcontainerpolicyrequestprivate.html" status="active" access="public" location="getcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for GetContainerPolicyRequest">
                    <function threadsafety="unspecified" name="GetContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::GetContainerPolicyRequestPrivate::GetContainerPolicyRequestPrivate" href="qtaws-mediastore-getcontainerpolicyrequestprivate.html#GetContainerPolicyRequestPrivate-1" status="active" access="public" location="getcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyRequestPrivate(const GetContainerPolicyRequestPrivate &amp;other, GetContainerPolicyRequest * const q)">
                        <parameter left="const GetContainerPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="GetContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GetContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::GetContainerPolicyRequestPrivate::GetContainerPolicyRequestPrivate" href="qtaws-mediastore-getcontainerpolicyrequestprivate.html#GetContainerPolicyRequestPrivate" status="active" access="public" location="getcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyRequestPrivate(const MediaStoreRequest::Action action, GetContainerPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="GetContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GetContainerPolicyResponse" fullname="QtAws::MediaStore::GetContainerPolicyResponse" href="qtaws-mediastore-getcontainerpolicyresponse.html" status="active" access="public" location="getcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore GetContainerPolicy responses">
                    <function threadsafety="unspecified" name="GetContainerPolicyResponse" fullname="QtAws::MediaStore::GetContainerPolicyResponse::GetContainerPolicyResponse" href="qtaws-mediastore-getcontainerpolicyresponse.html#GetContainerPolicyResponse" status="active" access="public" location="getcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyResponse(const GetContainerPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const GetContainerPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::GetContainerPolicyResponse::parseSuccess" href="qtaws-mediastore-getcontainerpolicyresponse.html#parseSuccess" status="active" access="protected" location="getcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::GetContainerPolicyResponse::request" href="qtaws-mediastore-getcontainerpolicyresponse.html#request" status="active" access="public" location="getcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const GetContainerPolicyRequest *" signature="const GetContainerPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::GetContainerPolicyResponsePrivate" href="qtaws-mediastore-getcontainerpolicyresponseprivate.html" status="active" access="public" location="getcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for GetContainerPolicyResponse">
                    <function threadsafety="unspecified" name="GetContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::GetContainerPolicyResponsePrivate::GetContainerPolicyResponsePrivate" href="qtaws-mediastore-getcontainerpolicyresponseprivate.html#GetContainerPolicyResponsePrivate" status="active" access="public" location="getcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetContainerPolicyResponsePrivate(GetContainerPolicyResponse * const q)">
                        <parameter left="GetContainerPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseGetContainerPolicyResponse" fullname="QtAws::MediaStore::GetContainerPolicyResponsePrivate::parseGetContainerPolicyResponse" href="qtaws-mediastore-getcontainerpolicyresponseprivate.html#parseGetContainerPolicyResponse" status="active" access="public" location="getcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcontainerpolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseGetContainerPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GetCorsPolicyRequest" fullname="QtAws::MediaStore::GetCorsPolicyRequest" href="qtaws-mediastore-getcorspolicyrequest.html" status="active" access="public" location="getcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore GetCorsPolicy requests">
                    <function threadsafety="unspecified" name="GetCorsPolicyRequest" fullname="QtAws::MediaStore::GetCorsPolicyRequest::GetCorsPolicyRequest" href="qtaws-mediastore-getcorspolicyrequest.html#GetCorsPolicyRequest-1" status="active" access="public" location="getcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyRequest()"/>
                    <function threadsafety="unspecified" name="GetCorsPolicyRequest" fullname="QtAws::MediaStore::GetCorsPolicyRequest::GetCorsPolicyRequest" href="qtaws-mediastore-getcorspolicyrequest.html#GetCorsPolicyRequest" status="active" access="public" location="getcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyRequest(const GetCorsPolicyRequest &amp;other)">
                        <parameter left="const GetCorsPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::GetCorsPolicyRequest::response" href="qtaws-mediastore-getcorspolicyrequest.html#response" status="active" access="protected" location="getcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::GetCorsPolicyRequest::isValid" href="qtaws-mediastore-getcorspolicyrequest.html#isValid" status="active" access="public" location="getcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::GetCorsPolicyRequestPrivate" href="qtaws-mediastore-getcorspolicyrequestprivate.html" status="active" access="public" location="getcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for GetCorsPolicyRequest">
                    <function threadsafety="unspecified" name="GetCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::GetCorsPolicyRequestPrivate::GetCorsPolicyRequestPrivate" href="qtaws-mediastore-getcorspolicyrequestprivate.html#GetCorsPolicyRequestPrivate-1" status="active" access="public" location="getcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyRequestPrivate(const GetCorsPolicyRequestPrivate &amp;other, GetCorsPolicyRequest * const q)">
                        <parameter left="const GetCorsPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="GetCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GetCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::GetCorsPolicyRequestPrivate::GetCorsPolicyRequestPrivate" href="qtaws-mediastore-getcorspolicyrequestprivate.html#GetCorsPolicyRequestPrivate" status="active" access="public" location="getcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyRequestPrivate(const MediaStoreRequest::Action action, GetCorsPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="GetCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GetCorsPolicyResponse" fullname="QtAws::MediaStore::GetCorsPolicyResponse" href="qtaws-mediastore-getcorspolicyresponse.html" status="active" access="public" location="getcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore GetCorsPolicy responses">
                    <function threadsafety="unspecified" name="GetCorsPolicyResponse" fullname="QtAws::MediaStore::GetCorsPolicyResponse::GetCorsPolicyResponse" href="qtaws-mediastore-getcorspolicyresponse.html#GetCorsPolicyResponse" status="active" access="public" location="getcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyResponse(const GetCorsPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const GetCorsPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::GetCorsPolicyResponse::parseSuccess" href="qtaws-mediastore-getcorspolicyresponse.html#parseSuccess" status="active" access="protected" location="getcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::GetCorsPolicyResponse::request" href="qtaws-mediastore-getcorspolicyresponse.html#request" status="active" access="public" location="getcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const GetCorsPolicyRequest *" signature="const GetCorsPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::GetCorsPolicyResponsePrivate" href="qtaws-mediastore-getcorspolicyresponseprivate.html" status="active" access="public" location="getcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for GetCorsPolicyResponse">
                    <function threadsafety="unspecified" name="GetCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::GetCorsPolicyResponsePrivate::GetCorsPolicyResponsePrivate" href="qtaws-mediastore-getcorspolicyresponseprivate.html#GetCorsPolicyResponsePrivate" status="active" access="public" location="getcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetCorsPolicyResponsePrivate(GetCorsPolicyResponse * const q)">
                        <parameter left="GetCorsPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseGetCorsPolicyResponse" fullname="QtAws::MediaStore::GetCorsPolicyResponsePrivate::parseGetCorsPolicyResponse" href="qtaws-mediastore-getcorspolicyresponseprivate.html#parseGetCorsPolicyResponse" status="active" access="public" location="getcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/getcorspolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseGetCorsPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ListContainersRequest" fullname="QtAws::MediaStore::ListContainersRequest" href="qtaws-mediastore-listcontainersrequest.html" status="active" access="public" location="listcontainersrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore ListContainers requests">
                    <function threadsafety="unspecified" name="ListContainersRequest" fullname="QtAws::MediaStore::ListContainersRequest::ListContainersRequest" href="qtaws-mediastore-listcontainersrequest.html#ListContainersRequest-1" status="active" access="public" location="listcontainersrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersRequest()"/>
                    <function threadsafety="unspecified" name="ListContainersRequest" fullname="QtAws::MediaStore::ListContainersRequest::ListContainersRequest" href="qtaws-mediastore-listcontainersrequest.html#ListContainersRequest" status="active" access="public" location="listcontainersrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersRequest(const ListContainersRequest &amp;other)">
                        <parameter left="const ListContainersRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::ListContainersRequest::response" href="qtaws-mediastore-listcontainersrequest.html#response" status="active" access="protected" location="listcontainersrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::ListContainersRequest::isValid" href="qtaws-mediastore-listcontainersrequest.html#isValid" status="active" access="public" location="listcontainersrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="ListContainersRequestPrivate" fullname="QtAws::MediaStore::ListContainersRequestPrivate" href="qtaws-mediastore-listcontainersrequestprivate.html" status="active" access="public" location="listcontainersrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for ListContainersRequest">
                    <function threadsafety="unspecified" name="ListContainersRequestPrivate" fullname="QtAws::MediaStore::ListContainersRequestPrivate::ListContainersRequestPrivate" href="qtaws-mediastore-listcontainersrequestprivate.html#ListContainersRequestPrivate-1" status="active" access="public" location="listcontainersrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersRequestPrivate(const ListContainersRequestPrivate &amp;other, ListContainersRequest * const q)">
                        <parameter left="const ListContainersRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="ListContainersRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ListContainersRequestPrivate" fullname="QtAws::MediaStore::ListContainersRequestPrivate::ListContainersRequestPrivate" href="qtaws-mediastore-listcontainersrequestprivate.html#ListContainersRequestPrivate" status="active" access="public" location="listcontainersrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersRequestPrivate(const MediaStoreRequest::Action action, ListContainersRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="ListContainersRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ListContainersResponse" fullname="QtAws::MediaStore::ListContainersResponse" href="qtaws-mediastore-listcontainersresponse.html" status="active" access="public" location="listcontainersresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore ListContainers responses">
                    <function threadsafety="unspecified" name="ListContainersResponse" fullname="QtAws::MediaStore::ListContainersResponse::ListContainersResponse" href="qtaws-mediastore-listcontainersresponse.html#ListContainersResponse" status="active" access="public" location="listcontainersresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersResponse(const ListContainersRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const ListContainersRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::ListContainersResponse::parseSuccess" href="qtaws-mediastore-listcontainersresponse.html#parseSuccess" status="active" access="protected" location="listcontainersresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::ListContainersResponse::request" href="qtaws-mediastore-listcontainersresponse.html#request" status="active" access="public" location="listcontainersresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const ListContainersRequest *" signature="const ListContainersRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="ListContainersResponsePrivate" fullname="QtAws::MediaStore::ListContainersResponsePrivate" href="qtaws-mediastore-listcontainersresponseprivate.html" status="active" access="public" location="listcontainersresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for ListContainersResponse">
                    <function threadsafety="unspecified" name="ListContainersResponsePrivate" fullname="QtAws::MediaStore::ListContainersResponsePrivate::ListContainersResponsePrivate" href="qtaws-mediastore-listcontainersresponseprivate.html#ListContainersResponsePrivate" status="active" access="public" location="listcontainersresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ListContainersResponsePrivate(ListContainersResponse * const q)">
                        <parameter left="ListContainersResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseListContainersResponse" fullname="QtAws::MediaStore::ListContainersResponsePrivate::parseListContainersResponse" href="qtaws-mediastore-listcontainersresponseprivate.html#parseListContainersResponse" status="active" access="public" location="listcontainersresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/listcontainersresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseListContainersResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MediaStoreClient" fullname="QtAws::MediaStore::MediaStoreClient" href="qtaws-mediastore-mediastoreclient.html" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="52" bases="QtAws::Core::AwsAbstractClient" module="QtAwsMediaStore" groups="aws-clients" brief="Access to the AWS Elemental MediaStore service">
                    <function threadsafety="unspecified" name="createContainer" fullname="QtAws::MediaStore::MediaStoreClient::createContainer" href="qtaws-mediastore-mediastoreclient.html#createContainer" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="68" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CreateContainerResponse *" signature="CreateContainerResponse * createContainer(const CreateContainerRequest &amp;request)">
                        <parameter left="const CreateContainerRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="deleteContainerPolicy" fullname="QtAws::MediaStore::MediaStoreClient::deleteContainerPolicy" href="qtaws-mediastore-mediastoreclient.html#deleteContainerPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="70" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DeleteContainerPolicyResponse *" signature="DeleteContainerPolicyResponse * deleteContainerPolicy(const DeleteContainerPolicyRequest &amp;request)">
                        <parameter left="const DeleteContainerPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="deleteContainer" fullname="QtAws::MediaStore::MediaStoreClient::deleteContainer" href="qtaws-mediastore-mediastoreclient.html#deleteContainer" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="69" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DeleteContainerResponse *" signature="DeleteContainerResponse * deleteContainer(const DeleteContainerRequest &amp;request)">
                        <parameter left="const DeleteContainerRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="deleteCorsPolicy" fullname="QtAws::MediaStore::MediaStoreClient::deleteCorsPolicy" href="qtaws-mediastore-mediastoreclient.html#deleteCorsPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="71" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DeleteCorsPolicyResponse *" signature="DeleteCorsPolicyResponse * deleteCorsPolicy(const DeleteCorsPolicyRequest &amp;request)">
                        <parameter left="const DeleteCorsPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="describeContainer" fullname="QtAws::MediaStore::MediaStoreClient::describeContainer" href="qtaws-mediastore-mediastoreclient.html#describeContainer" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="72" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DescribeContainerResponse *" signature="DescribeContainerResponse * describeContainer(const DescribeContainerRequest &amp;request)">
                        <parameter left="const DescribeContainerRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getContainerPolicy" fullname="QtAws::MediaStore::MediaStoreClient::getContainerPolicy" href="qtaws-mediastore-mediastoreclient.html#getContainerPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="73" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GetContainerPolicyResponse *" signature="GetContainerPolicyResponse * getContainerPolicy(const GetContainerPolicyRequest &amp;request)">
                        <parameter left="const GetContainerPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getCorsPolicy" fullname="QtAws::MediaStore::MediaStoreClient::getCorsPolicy" href="qtaws-mediastore-mediastoreclient.html#getCorsPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="74" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GetCorsPolicyResponse *" signature="GetCorsPolicyResponse * getCorsPolicy(const GetCorsPolicyRequest &amp;request)">
                        <parameter left="const GetCorsPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="listContainers" fullname="QtAws::MediaStore::MediaStoreClient::listContainers" href="qtaws-mediastore-mediastoreclient.html#listContainers" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="75" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ListContainersResponse *" signature="ListContainersResponse * listContainers(const ListContainersRequest &amp;request)">
                        <parameter left="const ListContainersRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreClient" fullname="QtAws::MediaStore::MediaStoreClient::MediaStoreClient" href="qtaws-mediastore-mediastoreclient.html#MediaStoreClient-1" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="" signature="MediaStoreClient(const QUrl &amp;endpoint, QtAws::Core::AwsAbstractCredentials *credentials, QNetworkAccessManager * const manager, QObject * const parent)">
                        <parameter left="const QUrl &amp;" right="" name="endpoint" default=""/>
                        <parameter left="QtAws::Core::AwsAbstractCredentials *" right="" name="credentials" default="NULL"/>
                        <parameter left="QNetworkAccessManager * const" right="" name="manager" default="NULL"/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreClient" fullname="QtAws::MediaStore::MediaStoreClient::MediaStoreClient" href="qtaws-mediastore-mediastoreclient.html#MediaStoreClient" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="56" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructs a MediaStoreClient object" signature="MediaStoreClient(const QtAws::Core::AwsRegion::Region region, QtAws::Core::AwsAbstractCredentials *credentials, QNetworkAccessManager * const manager, QObject * const parent)">
                        <parameter left="const QtAws::Core::AwsRegion::Region" right="" name="region" default="QtAws::Core::AwsRegion::InvalidRegion"/>
                        <parameter left="QtAws::Core::AwsAbstractCredentials *" right="" name="credentials" default="NULL"/>
                        <parameter left="QNetworkAccessManager * const" right="" name="manager" default="NULL"/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="putContainerPolicy" fullname="QtAws::MediaStore::MediaStoreClient::putContainerPolicy" href="qtaws-mediastore-mediastoreclient.html#putContainerPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="76" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PutContainerPolicyResponse *" signature="PutContainerPolicyResponse * putContainerPolicy(const PutContainerPolicyRequest &amp;request)">
                        <parameter left="const PutContainerPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="putCorsPolicy" fullname="QtAws::MediaStore::MediaStoreClient::putCorsPolicy" href="qtaws-mediastore-mediastoreclient.html#putCorsPolicy" status="active" access="public" location="mediastoreclient.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient.h" lineno="77" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PutCorsPolicyResponse *" signature="PutCorsPolicyResponse * putCorsPolicy(const PutCorsPolicyRequest &amp;request)">
                        <parameter left="const PutCorsPolicyRequest &amp;" right="" name="request" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MediaStoreClientPrivate" fullname="QtAws::MediaStore::MediaStoreClientPrivate" href="qtaws-mediastore-mediastoreclientprivate.html" status="active" access="public" location="mediastoreclient_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient_p.h" lineno="32" bases="QtAws::Core::AwsAbstractClientPrivate" module="QtAwsMediaStore" groups="aws-clients" brief="Private implementation for MediaStoreClient">
                    <function threadsafety="unspecified" name="MediaStoreClientPrivate" fullname="QtAws::MediaStore::MediaStoreClientPrivate::MediaStoreClientPrivate" href="qtaws-mediastore-mediastoreclientprivate.html#MediaStoreClientPrivate" status="active" access="public" location="mediastoreclient_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreclient_p.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreClientPrivate(MediaStoreClient * const q)">
                        <parameter left="MediaStoreClient * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MediaStoreRequest" fullname="QtAws::MediaStore::MediaStoreRequest" href="qtaws-mediastore-mediastorerequest.html" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="35" bases="QtAws::Core::AwsAbstractRequest" module="QtAwsMediaStore" brief="Interface for MediaStore requests">
                    <enum threadsafety="unspecified" name="Action" fullname="QtAws::MediaStore::MediaStoreRequest::Action" href="qtaws-mediastore-mediastorerequest.html#Action-enum" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="39" typedef="QtAws::MediaStore::MediaStoreRequest::Actions">
                        <value name="CreateContainerAction" value="0"/>
                        <value name="DeleteContainerAction" value="1"/>
                        <value name="DeleteContainerPolicyAction" value="2"/>
                        <value name="DeleteCorsPolicyAction" value="3"/>
                        <value name="DescribeContainerAction" value="4"/>
                        <value name="GetContainerPolicyAction" value="5"/>
                        <value name="GetCorsPolicyAction" value="6"/>
                        <value name="ListContainersAction" value="7"/>
                        <value name="PutContainerPolicyAction" value="8"/>
                        <value name="PutCorsPolicyAction" value="9"/>
                    </enum>
                    <typedef threadsafety="unspecified" name="Actions" fullname="QtAws::MediaStore::MediaStoreRequest::Actions" href="qtaws-mediastore-mediastorerequest.html#Action-enum" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="51" enum="QtAws::MediaStore::MediaStoreRequest::Action"/>
                    <function threadsafety="unspecified" name="operator=" fullname="QtAws::MediaStore::MediaStoreRequest::operator=" href="qtaws-mediastore-mediastorerequest.html#operator-eq" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="55" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MediaStoreRequest &amp;" signature="MediaStoreRequest &amp; operator=(const MediaStoreRequest &amp;other)">
                        <parameter left="const MediaStoreRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreRequest" fullname="QtAws::MediaStore::MediaStoreRequest::MediaStoreRequest" href="qtaws-mediastore-mediastorerequest.html#MediaStoreRequest-2" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="69" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreRequest(MediaStoreRequestPrivate * const d)">
                        <parameter left="MediaStoreRequestPrivate * const" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreRequest" fullname="QtAws::MediaStore::MediaStoreRequest::MediaStoreRequest" href="qtaws-mediastore-mediastorerequest.html#MediaStoreRequest" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="53" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreRequest(const Action action)">
                        <parameter left="const Action" right="" name="action" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreRequest" fullname="QtAws::MediaStore::MediaStoreRequest::MediaStoreRequest" href="qtaws-mediastore-mediastorerequest.html#MediaStoreRequest-1" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="54" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreRequest(const MediaStoreRequest &amp;other)">
                        <parameter left="const MediaStoreRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clearParameter" fullname="QtAws::MediaStore::MediaStoreRequest::clearParameter" href="qtaws-mediastore-mediastorerequest.html#clearParameter" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clearParameter(const QString &amp;name)">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clearParameters" fullname="QtAws::MediaStore::MediaStoreRequest::clearParameters" href="qtaws-mediastore-mediastorerequest.html#clearParameters" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clearParameters()"/>
                    <function threadsafety="unspecified" name="setAction" fullname="QtAws::MediaStore::MediaStoreRequest::setAction" href="qtaws-mediastore-mediastorerequest.html#setAction" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAction(const Action action)">
                        <parameter left="const Action" right="" name="action" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setApiVersion" fullname="QtAws::MediaStore::MediaStoreRequest::setApiVersion" href="qtaws-mediastore-mediastorerequest.html#setApiVersion" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setApiVersion(const QString &amp;version)">
                        <parameter left="const QString &amp;" right="" name="version" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setParameter" fullname="QtAws::MediaStore::MediaStoreRequest::setParameter" href="qtaws-mediastore-mediastorerequest.html#setParameter" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="76" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setParameter(const QString &amp;name, const QVariant &amp;value)">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                        <parameter left="const QVariant &amp;" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setParameters" fullname="QtAws::MediaStore::MediaStoreRequest::setParameters" href="qtaws-mediastore-mediastorerequest.html#setParameters" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setParameters(const QVariantMap &amp;parameters)">
                        <parameter left="const QVariantMap &amp;" right="" name="parameters" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="action" fullname="QtAws::MediaStore::MediaStoreRequest::action" href="qtaws-mediastore-mediastorerequest.html#action" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="57" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Action" signature="Action action() const"/>
                    <function threadsafety="unspecified" name="unsignedRequest" fullname="QtAws::MediaStore::MediaStoreRequest::unsignedRequest" href="qtaws-mediastore-mediastorerequest.html#unsignedRequest" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="79" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QNetworkRequest" signature="QNetworkRequest unsignedRequest(const QUrl &amp;endpoint) const override">
                        <parameter left="const QUrl &amp;" right="" name="endpoint" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="actionString" fullname="QtAws::MediaStore::MediaStoreRequest::actionString" href="qtaws-mediastore-mediastorerequest.html#actionString" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="58" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString actionString() const"/>
                    <function threadsafety="unspecified" name="apiVersion" fullname="QtAws::MediaStore::MediaStoreRequest::apiVersion" href="qtaws-mediastore-mediastorerequest.html#apiVersion" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString apiVersion() const"/>
                    <function threadsafety="unspecified" name="parameter" fullname="QtAws::MediaStore::MediaStoreRequest::parameter" href="qtaws-mediastore-mediastorerequest.html#parameter" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="74" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVariant" signature="QVariant parameter(const QString &amp;name, const QVariant &amp;defaultValue) const">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                        <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"/>
                    </function>
                    <function threadsafety="unspecified" name="operator==" fullname="QtAws::MediaStore::MediaStoreRequest::operator==" href="qtaws-mediastore-mediastorerequest.html#operator-eq-eq" status="active" access="public" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="64" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const MediaStoreRequest &amp;other) const">
                        <parameter left="const MediaStoreRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parameters" fullname="QtAws::MediaStore::MediaStoreRequest::parameters" href="qtaws-mediastore-mediastorerequest.html#parameters" status="active" access="protected" location="mediastorerequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest.h" lineno="75" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QVariantMap &amp;" signature="const QVariantMap &amp; parameters() const"/>
                </class>
                <class threadsafety="unspecified" name="MediaStoreRequestPrivate" fullname="QtAws::MediaStore::MediaStoreRequestPrivate" href="qtaws-mediastore-mediastorerequestprivate.html" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="31" bases="QtAws::Core::AwsAbstractRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for MediaStoreRequest">
                    <function threadsafety="unspecified" name="MediaStoreRequestPrivate" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::MediaStoreRequestPrivate" href="qtaws-mediastore-mediastorerequestprivate.html#MediaStoreRequestPrivate" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="38" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreRequestPrivate(const MediaStoreRequest::Action action, MediaStoreRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="MediaStoreRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreRequestPrivate" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::MediaStoreRequestPrivate" href="qtaws-mediastore-mediastorerequestprivate.html#MediaStoreRequestPrivate-1" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="39" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreRequestPrivate(const MediaStoreRequestPrivate &amp;other, MediaStoreRequest * const q)">
                        <parameter left="const MediaStoreRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="MediaStoreRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="toString" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::toString" href="qtaws-mediastore-mediastorerequestprivate.html#toString" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="41" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString toString(const MediaStoreRequest::Action &amp;action)">
                        <parameter left="const MediaStoreRequest::Action &amp;" right="" name="action" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="action" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::action" href="qtaws-mediastore-mediastorerequestprivate.html#action-var" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="34" type="MediaStoreRequest::Action" static="false"/>
                    <variable threadsafety="unspecified" name="apiVersion" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::apiVersion" href="qtaws-mediastore-mediastorerequestprivate.html#apiVersion-var" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="35" type="QString" static="false"/>
                    <variable threadsafety="unspecified" name="parameters" fullname="QtAws::MediaStore::MediaStoreRequestPrivate::parameters" href="qtaws-mediastore-mediastorerequestprivate.html#parameters-var" status="active" access="public" location="mediastorerequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastorerequest_p.h" lineno="36" type="QVariantMap" static="false"/>
                </class>
                <class threadsafety="unspecified" name="MediaStoreResponse" fullname="QtAws::MediaStore::MediaStoreResponse" href="qtaws-mediastore-mediastoreresponse.html" status="active" access="public" location="mediastoreresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse.h" lineno="31" bases="QtAws::Core::AwsAbstractResponse" module="QtAwsMediaStore" brief="Interface for MediaStore responses">
                    <function threadsafety="unspecified" name="MediaStoreResponse" fullname="QtAws::MediaStore::MediaStoreResponse::MediaStoreResponse" href="qtaws-mediastore-mediastoreresponse.html#MediaStoreResponse-1" status="active" access="protected" location="mediastoreresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse.h" lineno="39" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreResponse(MediaStoreResponsePrivate * const d, QObject * const parent)">
                        <parameter left="MediaStoreResponsePrivate * const" right="" name="d" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MediaStoreResponse" fullname="QtAws::MediaStore::MediaStoreResponse::MediaStoreResponse" href="qtaws-mediastore-mediastoreresponse.html#MediaStoreResponse" status="active" access="public" location="mediastoreresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreResponse(QObject * const parent)">
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseFailure" fullname="QtAws::MediaStore::MediaStoreResponse::parseFailure" href="qtaws-mediastore-mediastoreresponse.html#parseFailure" status="active" access="protected" location="mediastoreresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse.h" lineno="43" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseFailure(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MediaStoreResponsePrivate" fullname="QtAws::MediaStore::MediaStoreResponsePrivate" href="qtaws-mediastore-mediastoreresponseprivate.html" status="active" access="public" location="mediastoreresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse_p.h" lineno="30" bases="QtAws::Core::AwsAbstractResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for MediaStoreResponse">
                    <function threadsafety="unspecified" name="MediaStoreResponsePrivate" fullname="QtAws::MediaStore::MediaStoreResponsePrivate::MediaStoreResponsePrivate" href="qtaws-mediastore-mediastoreresponseprivate.html#MediaStoreResponsePrivate" status="active" access="public" location="mediastoreresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/mediastoreresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaStoreResponsePrivate(MediaStoreResponse * const q)">
                        <parameter left="MediaStoreResponse * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PutContainerPolicyRequest" fullname="QtAws::MediaStore::PutContainerPolicyRequest" href="qtaws-mediastore-putcontainerpolicyrequest.html" status="active" access="public" location="putcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore PutContainerPolicy requests">
                    <function threadsafety="unspecified" name="PutContainerPolicyRequest" fullname="QtAws::MediaStore::PutContainerPolicyRequest::PutContainerPolicyRequest" href="qtaws-mediastore-putcontainerpolicyrequest.html#PutContainerPolicyRequest-1" status="active" access="public" location="putcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyRequest()"/>
                    <function threadsafety="unspecified" name="PutContainerPolicyRequest" fullname="QtAws::MediaStore::PutContainerPolicyRequest::PutContainerPolicyRequest" href="qtaws-mediastore-putcontainerpolicyrequest.html#PutContainerPolicyRequest" status="active" access="public" location="putcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyRequest(const PutContainerPolicyRequest &amp;other)">
                        <parameter left="const PutContainerPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::PutContainerPolicyRequest::response" href="qtaws-mediastore-putcontainerpolicyrequest.html#response" status="active" access="protected" location="putcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::PutContainerPolicyRequest::isValid" href="qtaws-mediastore-putcontainerpolicyrequest.html#isValid" status="active" access="public" location="putcontainerpolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="PutContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::PutContainerPolicyRequestPrivate" href="qtaws-mediastore-putcontainerpolicyrequestprivate.html" status="active" access="public" location="putcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for PutContainerPolicyRequest">
                    <function threadsafety="unspecified" name="PutContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::PutContainerPolicyRequestPrivate::PutContainerPolicyRequestPrivate" href="qtaws-mediastore-putcontainerpolicyrequestprivate.html#PutContainerPolicyRequestPrivate" status="active" access="public" location="putcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyRequestPrivate(const MediaStoreRequest::Action action, PutContainerPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="PutContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PutContainerPolicyRequestPrivate" fullname="QtAws::MediaStore::PutContainerPolicyRequestPrivate::PutContainerPolicyRequestPrivate" href="qtaws-mediastore-putcontainerpolicyrequestprivate.html#PutContainerPolicyRequestPrivate-1" status="active" access="public" location="putcontainerpolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyRequestPrivate(const PutContainerPolicyRequestPrivate &amp;other, PutContainerPolicyRequest * const q)">
                        <parameter left="const PutContainerPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="PutContainerPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PutContainerPolicyResponse" fullname="QtAws::MediaStore::PutContainerPolicyResponse" href="qtaws-mediastore-putcontainerpolicyresponse.html" status="active" access="public" location="putcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore PutContainerPolicy responses">
                    <function threadsafety="unspecified" name="PutContainerPolicyResponse" fullname="QtAws::MediaStore::PutContainerPolicyResponse::PutContainerPolicyResponse" href="qtaws-mediastore-putcontainerpolicyresponse.html#PutContainerPolicyResponse" status="active" access="public" location="putcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyResponse(const PutContainerPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const PutContainerPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::PutContainerPolicyResponse::parseSuccess" href="qtaws-mediastore-putcontainerpolicyresponse.html#parseSuccess" status="active" access="protected" location="putcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::PutContainerPolicyResponse::request" href="qtaws-mediastore-putcontainerpolicyresponse.html#request" status="active" access="public" location="putcontainerpolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const PutContainerPolicyRequest *" signature="const PutContainerPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="PutContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::PutContainerPolicyResponsePrivate" href="qtaws-mediastore-putcontainerpolicyresponseprivate.html" status="active" access="public" location="putcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for PutContainerPolicyResponse">
                    <function threadsafety="unspecified" name="PutContainerPolicyResponsePrivate" fullname="QtAws::MediaStore::PutContainerPolicyResponsePrivate::PutContainerPolicyResponsePrivate" href="qtaws-mediastore-putcontainerpolicyresponseprivate.html#PutContainerPolicyResponsePrivate" status="active" access="public" location="putcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutContainerPolicyResponsePrivate(PutContainerPolicyResponse * const q)">
                        <parameter left="PutContainerPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parsePutContainerPolicyResponse" fullname="QtAws::MediaStore::PutContainerPolicyResponsePrivate::parsePutContainerPolicyResponse" href="qtaws-mediastore-putcontainerpolicyresponseprivate.html#parsePutContainerPolicyResponse" status="active" access="public" location="putcontainerpolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcontainerpolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parsePutContainerPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PutCorsPolicyRequest" fullname="QtAws::MediaStore::PutCorsPolicyRequest" href="qtaws-mediastore-putcorspolicyrequest.html" status="active" access="public" location="putcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest.h" lineno="30" bases="QtAws::MediaStore::MediaStoreRequest" module="QtAwsMediaStore" brief="Interface for MediaStore PutCorsPolicy requests">
                    <function threadsafety="unspecified" name="PutCorsPolicyRequest" fullname="QtAws::MediaStore::PutCorsPolicyRequest::PutCorsPolicyRequest" href="qtaws-mediastore-putcorspolicyrequest.html#PutCorsPolicyRequest-1" status="active" access="public" location="putcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyRequest()"/>
                    <function threadsafety="unspecified" name="PutCorsPolicyRequest" fullname="QtAws::MediaStore::PutCorsPolicyRequest::PutCorsPolicyRequest" href="qtaws-mediastore-putcorspolicyrequest.html#PutCorsPolicyRequest" status="active" access="public" location="putcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyRequest(const PutCorsPolicyRequest &amp;other)">
                        <parameter left="const PutCorsPolicyRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::MediaStore::PutCorsPolicyRequest::response" href="qtaws-mediastore-putcorspolicyrequest.html#response" status="active" access="protected" location="putcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::MediaStore::PutCorsPolicyRequest::isValid" href="qtaws-mediastore-putcorspolicyrequest.html#isValid" status="active" access="public" location="putcorspolicyrequest.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="PutCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::PutCorsPolicyRequestPrivate" href="qtaws-mediastore-putcorspolicyrequestprivate.html" status="active" access="public" location="putcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest_p.h" lineno="31" bases="QtAws::MediaStore::MediaStoreRequestPrivate" module="QtAwsMediaStore" brief="Private implementation for PutCorsPolicyRequest">
                    <function threadsafety="unspecified" name="PutCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::PutCorsPolicyRequestPrivate::PutCorsPolicyRequestPrivate" href="qtaws-mediastore-putcorspolicyrequestprivate.html#PutCorsPolicyRequestPrivate" status="active" access="public" location="putcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyRequestPrivate(const MediaStoreRequest::Action action, PutCorsPolicyRequest * const q)">
                        <parameter left="const MediaStoreRequest::Action" right="" name="action" default=""/>
                        <parameter left="PutCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PutCorsPolicyRequestPrivate" fullname="QtAws::MediaStore::PutCorsPolicyRequestPrivate::PutCorsPolicyRequestPrivate" href="qtaws-mediastore-putcorspolicyrequestprivate.html#PutCorsPolicyRequestPrivate-1" status="active" access="public" location="putcorspolicyrequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyrequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyRequestPrivate(const PutCorsPolicyRequestPrivate &amp;other, PutCorsPolicyRequest * const q)">
                        <parameter left="const PutCorsPolicyRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="PutCorsPolicyRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PutCorsPolicyResponse" fullname="QtAws::MediaStore::PutCorsPolicyResponse" href="qtaws-mediastore-putcorspolicyresponse.html" status="active" access="public" location="putcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse.h" lineno="31" bases="QtAws::MediaStore::MediaStoreResponse" module="QtAwsMediaStore" brief="Interace for MediaStore PutCorsPolicy responses">
                    <function threadsafety="unspecified" name="PutCorsPolicyResponse" fullname="QtAws::MediaStore::PutCorsPolicyResponse::PutCorsPolicyResponse" href="qtaws-mediastore-putcorspolicyresponse.html#PutCorsPolicyResponse" status="active" access="public" location="putcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyResponse(const PutCorsPolicyRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const PutCorsPolicyRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::MediaStore::PutCorsPolicyResponse::parseSuccess" href="qtaws-mediastore-putcorspolicyresponse.html#parseSuccess" status="active" access="protected" location="putcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::MediaStore::PutCorsPolicyResponse::request" href="qtaws-mediastore-putcorspolicyresponse.html#request" status="active" access="public" location="putcorspolicyresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const PutCorsPolicyRequest *" signature="const PutCorsPolicyRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="PutCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::PutCorsPolicyResponsePrivate" href="qtaws-mediastore-putcorspolicyresponseprivate.html" status="active" access="public" location="putcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse_p.h" lineno="30" bases="QtAws::MediaStore::MediaStoreResponsePrivate" module="QtAwsMediaStore" brief="Private implementation for PutCorsPolicyResponse">
                    <function threadsafety="unspecified" name="PutCorsPolicyResponsePrivate" fullname="QtAws::MediaStore::PutCorsPolicyResponsePrivate::PutCorsPolicyResponsePrivate" href="qtaws-mediastore-putcorspolicyresponseprivate.html#PutCorsPolicyResponsePrivate" status="active" access="public" location="putcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PutCorsPolicyResponsePrivate(PutCorsPolicyResponse * const q)">
                        <parameter left="PutCorsPolicyResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parsePutCorsPolicyResponse" fullname="QtAws::MediaStore::PutCorsPolicyResponsePrivate::parsePutCorsPolicyResponse" href="qtaws-mediastore-putcorspolicyresponseprivate.html#parsePutCorsPolicyResponse" status="active" access="public" location="putcorspolicyresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/putcorspolicyresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parsePutCorsPolicyResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
            </namespace>
        </namespace>
        <page name="qtawsmediastore-index.html" href="qtawsmediastore-index.html" status="active" location="qtawsmediastore-index.qdoc" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/doc/qtawsmediastore-index.qdoc" lineno="2" subtype="page" title="Qt Aws MediaStore" fulltitle="Qt Aws MediaStore" subtitle="" module="QtAwsMediaStore" brief="Classes for the AWS Elemental MediaStore service"/>
        <group name="aws-clients" href="aws-clients.html" status="internal" seen="false" title="" members="MediaStoreClient,MediaStoreClientPrivate"/>
        <group name="modules" href="modules.html" status="internal" seen="false" title="" members="QtAwsMediaStore"/>
        <module name="QtAws" href="qtaws-module.html" status="internal" seen="false" title="" members="QtAws"/>
        <module name="QtAwsMediaStore" href="qtawsmediastore-module.html" status="active" location="qtawsmediastore.qdoc" filepath="/home/paul/src/aws-sdk-qt/src/mediastore/doc/qtawsmediastore.qdoc" lineno="2" seen="true" title="MediaStore C++ Classes" module="QtAwsMediaStore" groups="modules" members="CreateContainerRequest,CreateContainerRequestPrivate,CreateContainerResponse,CreateContainerResponsePrivate,DeleteContainerPolicyRequest,DeleteContainerPolicyRequestPrivate,DeleteContainerPolicyResponse,DeleteContainerPolicyResponsePrivate,DeleteContainerRequest,DeleteContainerRequestPrivate,DeleteContainerResponse,DeleteContainerResponsePrivate,DeleteCorsPolicyRequest,DeleteCorsPolicyRequestPrivate,DeleteCorsPolicyResponse,DeleteCorsPolicyResponsePrivate,DescribeContainerRequest,DescribeContainerRequestPrivate,DescribeContainerResponse,DescribeContainerResponsePrivate,GetContainerPolicyRequest,GetContainerPolicyRequestPrivate,GetContainerPolicyResponse,GetContainerPolicyResponsePrivate,GetCorsPolicyRequest,GetCorsPolicyRequestPrivate,GetCorsPolicyResponse,GetCorsPolicyResponsePrivate,ListContainersRequest,ListContainersRequestPrivate,ListContainersResponse,ListContainersResponsePrivate,MediaStore,MediaStoreClient,MediaStoreClientPrivate,MediaStoreRequest,MediaStoreRequestPrivate,MediaStoreResponse,MediaStoreResponsePrivate,PutContainerPolicyRequest,PutContainerPolicyRequestPrivate,PutContainerPolicyResponse,PutContainerPolicyResponsePrivate,PutCorsPolicyRequest,PutCorsPolicyRequestPrivate,PutCorsPolicyResponse,PutCorsPolicyResponsePrivate" brief="Provides AWS MediaStore functionality"/>
    </namespace>
</INDEX>
