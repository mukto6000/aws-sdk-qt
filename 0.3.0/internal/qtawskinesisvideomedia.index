<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="AWS KinesisVideoMedia SDK for Qt" version="" project="QtAwsKinesisVideoMedia" indexTitle="qtawskinesisvideomedia-index.html">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="qtawskinesisvideomedia">
        <page name="qtawskinesisvideomedia-index.html" href="qtawskinesisvideomedia-index.html" status="active" location="qtawskinesisvideomedia-index.qdoc" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/doc/qtawskinesisvideomedia-index.qdoc" lineno="2" subtype="page" title="Qt Aws KinesisVideoMedia" fulltitle="Qt Aws KinesisVideoMedia" subtitle="" module="QtAwsKinesisVideoMedia" brief="Classes for the Amazon Kinesis Video Streams Media (Kinesis Video Media) service"/>
        <namespace threadsafety="unspecified" name="QtAws" href="qtaws.html" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="25" module="QtAws" brief="Parent namespace for all other QtAws namespaces">
            <namespace threadsafety="unspecified" name="KinesisVideoMedia" fullname="QtAws::KinesisVideoMedia" href="qtaws-kinesisvideomedia.html" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="26" module="QtAwsKinesisVideoMedia" brief="Contains classess for accessing Amazon Kinesis Video Streams Media (Kinesis Video Media)">
                <class threadsafety="unspecified" name="GetMediaRequest" fullname="QtAws::KinesisVideoMedia::GetMediaRequest" href="qtaws-kinesisvideomedia-getmediarequest.html" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="30" bases="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest" module="QtAwsKinesisVideoMedia" brief="Interface for KinesisVideoMedia GetMedia requests">
                    <function threadsafety="unspecified" name="GetMediaRequest" fullname="QtAws::KinesisVideoMedia::GetMediaRequest::GetMediaRequest" href="qtaws-kinesisvideomedia-getmediarequest.html#GetMediaRequest-1" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaRequest()"/>
                    <function threadsafety="unspecified" name="GetMediaRequest" fullname="QtAws::KinesisVideoMedia::GetMediaRequest::GetMediaRequest" href="qtaws-kinesisvideomedia-getmediarequest.html#GetMediaRequest" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="33" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaRequest(const GetMediaRequest &amp;other)">
                        <parameter left="const GetMediaRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="response" fullname="QtAws::KinesisVideoMedia::GetMediaRequest::response" href="qtaws-kinesisvideomedia-getmediarequest.html#response" status="active" access="protected" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="40" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QtAws::Core::AwsAbstractResponse *" signature="QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override">
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isValid" fullname="QtAws::KinesisVideoMedia::GetMediaRequest::isValid" href="qtaws-kinesisvideomedia-getmediarequest.html#isValid" status="active" access="public" location="getmediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest.h" lineno="36" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::GetMediaRequestPrivate" href="qtaws-kinesisvideomedia-getmediarequestprivate.html" status="active" access="public" location="getmediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest_p.h" lineno="31" bases="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate" module="QtAwsKinesisVideoMedia" brief="Private implementation for GetMediaRequest">
                    <function threadsafety="unspecified" name="GetMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::GetMediaRequestPrivate::GetMediaRequestPrivate" href="qtaws-kinesisvideomedia-getmediarequestprivate.html#GetMediaRequestPrivate-1" status="active" access="public" location="getmediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest_p.h" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaRequestPrivate(const GetMediaRequestPrivate &amp;other, GetMediaRequest * const q)">
                        <parameter left="const GetMediaRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="GetMediaRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GetMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::GetMediaRequestPrivate::GetMediaRequestPrivate" href="qtaws-kinesisvideomedia-getmediarequestprivate.html#GetMediaRequestPrivate" status="active" access="public" location="getmediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediarequest_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaRequestPrivate(const KinesisVideoMediaRequest::Action action, GetMediaRequest * const q)">
                        <parameter left="const KinesisVideoMediaRequest::Action" right="" name="action" default=""/>
                        <parameter left="GetMediaRequest * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GetMediaResponse" fullname="QtAws::KinesisVideoMedia::GetMediaResponse" href="qtaws-kinesisvideomedia-getmediaresponse.html" status="active" access="public" location="getmediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse.h" lineno="31" bases="QtAws::KinesisVideoMedia::KinesisVideoMediaResponse" module="QtAwsKinesisVideoMedia" brief="Interace for KinesisVideoMedia GetMedia responses">
                    <function threadsafety="unspecified" name="GetMediaResponse" fullname="QtAws::KinesisVideoMedia::GetMediaResponse::GetMediaResponse" href="qtaws-kinesisvideomedia-getmediaresponse.html#GetMediaResponse" status="active" access="public" location="getmediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaResponse(const GetMediaRequest &amp;request, QNetworkReply * const reply, QObject * const parent)">
                        <parameter left="const GetMediaRequest &amp;" right="" name="request" default=""/>
                        <parameter left="QNetworkReply * const" right="" name="reply" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseSuccess" fullname="QtAws::KinesisVideoMedia::GetMediaResponse::parseSuccess" href="qtaws-kinesisvideomedia-getmediaresponse.html#parseSuccess" status="active" access="protected" location="getmediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse.h" lineno="40" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseSuccess(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="request" fullname="QtAws::KinesisVideoMedia::GetMediaResponse::request" href="qtaws-kinesisvideomedia-getmediaresponse.html#request" status="active" access="public" location="getmediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse.h" lineno="37" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const GetMediaRequest *" signature="const GetMediaRequest * request() const override"/>
                </class>
                <class threadsafety="unspecified" name="GetMediaResponsePrivate" fullname="QtAws::KinesisVideoMedia::GetMediaResponsePrivate" href="qtaws-kinesisvideomedia-getmediaresponseprivate.html" status="active" access="public" location="getmediaresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse_p.h" lineno="30" bases="QtAws::KinesisVideoMedia::KinesisVideoMediaResponsePrivate" module="QtAwsKinesisVideoMedia" brief="Private implementation for GetMediaResponse">
                    <function threadsafety="unspecified" name="GetMediaResponsePrivate" fullname="QtAws::KinesisVideoMedia::GetMediaResponsePrivate::GetMediaResponsePrivate" href="qtaws-kinesisvideomedia-getmediaresponseprivate.html#GetMediaResponsePrivate" status="active" access="public" location="getmediaresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GetMediaResponsePrivate(GetMediaResponse * const q)">
                        <parameter left="GetMediaResponse * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parseGetMediaResponse" fullname="QtAws::KinesisVideoMedia::GetMediaResponsePrivate::parseGetMediaResponse" href="qtaws-kinesisvideomedia-getmediaresponseprivate.html#parseGetMediaResponse" status="active" access="public" location="getmediaresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/getmediaresponse_p.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseGetMediaResponse(QXmlStreamReader &amp;xml)">
                        <parameter left="QXmlStreamReader &amp;" right="" name="xml" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaClient" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClient" href="qtaws-kinesisvideomedia-kinesisvideomediaclient.html" status="active" access="public" location="kinesisvideomediaclient.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient.h" lineno="34" bases="QtAws::Core::AwsAbstractClient" module="QtAwsKinesisVideoMedia" groups="aws-clients" brief="Access to the Amazon Kinesis Video Streams Media (Kinesis Video Media) service">
                    <function threadsafety="unspecified" name="getMedia" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClient::getMedia" href="qtaws-kinesisvideomedia-kinesisvideomediaclient.html#getMedia" status="active" access="public" location="kinesisvideomediaclient.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient.h" lineno="50" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GetMediaResponse *" signature="GetMediaResponse * getMedia(const GetMediaRequest &amp;request)">
                        <parameter left="const GetMediaRequest &amp;" right="" name="request" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaClient" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClient::KinesisVideoMediaClient" href="qtaws-kinesisvideomedia-kinesisvideomediaclient.html#KinesisVideoMediaClient-1" status="active" access="public" location="kinesisvideomediaclient.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient.h" lineno="44" virtual="non" meta="constructor" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="" signature="KinesisVideoMediaClient(const QUrl &amp;endpoint, QtAws::Core::AwsAbstractCredentials *credentials, QNetworkAccessManager * const manager, QObject * const parent)">
                        <parameter left="const QUrl &amp;" right="" name="endpoint" default=""/>
                        <parameter left="QtAws::Core::AwsAbstractCredentials *" right="" name="credentials" default="NULL"/>
                        <parameter left="QNetworkAccessManager * const" right="" name="manager" default="NULL"/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaClient" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClient::KinesisVideoMediaClient" href="qtaws-kinesisvideomedia-kinesisvideomediaclient.html#KinesisVideoMediaClient" status="active" access="public" location="kinesisvideomediaclient.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient.h" lineno="38" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructs a KinesisVideoMediaClient object" signature="KinesisVideoMediaClient(const QtAws::Core::AwsRegion::Region region, QtAws::Core::AwsAbstractCredentials *credentials, QNetworkAccessManager * const manager, QObject * const parent)">
                        <parameter left="const QtAws::Core::AwsRegion::Region" right="" name="region" default="QtAws::Core::AwsRegion::InvalidRegion"/>
                        <parameter left="QtAws::Core::AwsAbstractCredentials *" right="" name="credentials" default="NULL"/>
                        <parameter left="QNetworkAccessManager * const" right="" name="manager" default="NULL"/>
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaClientPrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClientPrivate" href="qtaws-kinesisvideomedia-kinesisvideomediaclientprivate.html" status="active" access="public" location="kinesisvideomediaclient_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient_p.h" lineno="32" bases="QtAws::Core::AwsAbstractClientPrivate" module="QtAwsKinesisVideoMedia" groups="aws-clients" brief="Private implementation for KinesisVideoMediaClient">
                    <function threadsafety="unspecified" name="KinesisVideoMediaClientPrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaClientPrivate::KinesisVideoMediaClientPrivate" href="qtaws-kinesisvideomedia-kinesisvideomediaclientprivate.html#KinesisVideoMediaClientPrivate" status="active" access="public" location="kinesisvideomediaclient_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaclient_p.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaClientPrivate(KinesisVideoMediaClient * const q)">
                        <parameter left="KinesisVideoMediaClient * const" right="" name="q" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaRequest" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="35" bases="QtAws::Core::AwsAbstractRequest" module="QtAwsKinesisVideoMedia" brief="Interface for KinesisVideoMedia requests">
                    <enum threadsafety="unspecified" name="Action" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::Action" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#Action-enum" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="39" typedef="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::Actions">
                        <value name="GetMediaAction" value="0"/>
                    </enum>
                    <typedef threadsafety="unspecified" name="Actions" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::Actions" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#Action-enum" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="42" enum="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::Action"/>
                    <function threadsafety="unspecified" name="operator=" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::operator=" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#operator-eq" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="46" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="KinesisVideoMediaRequest &amp;" signature="KinesisVideoMediaRequest &amp; operator=(const KinesisVideoMediaRequest &amp;other)">
                        <parameter left="const KinesisVideoMediaRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaRequest" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::KinesisVideoMediaRequest" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#KinesisVideoMediaRequest-2" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="60" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaRequest(KinesisVideoMediaRequestPrivate * const d)">
                        <parameter left="KinesisVideoMediaRequestPrivate * const" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaRequest" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::KinesisVideoMediaRequest" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#KinesisVideoMediaRequest" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="44" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaRequest(const Action action)">
                        <parameter left="const Action" right="" name="action" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaRequest" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::KinesisVideoMediaRequest" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#KinesisVideoMediaRequest-1" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="45" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaRequest(const KinesisVideoMediaRequest &amp;other)">
                        <parameter left="const KinesisVideoMediaRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clearParameter" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::clearParameter" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#clearParameter" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clearParameter(const QString &amp;name)">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clearParameters" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::clearParameters" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#clearParameters" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clearParameters()"/>
                    <function threadsafety="unspecified" name="setAction" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::setAction" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#setAction" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAction(const Action action)">
                        <parameter left="const Action" right="" name="action" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setApiVersion" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::setApiVersion" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#setApiVersion" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setApiVersion(const QString &amp;version)">
                        <parameter left="const QString &amp;" right="" name="version" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setParameter" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::setParameter" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#setParameter" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setParameter(const QString &amp;name, const QVariant &amp;value)">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                        <parameter left="const QVariant &amp;" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setParameters" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::setParameters" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#setParameters" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="68" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setParameters(const QVariantMap &amp;parameters)">
                        <parameter left="const QVariantMap &amp;" right="" name="parameters" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="action" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::action" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#action" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="48" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Action" signature="Action action() const"/>
                    <function threadsafety="unspecified" name="unsignedRequest" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::unsignedRequest" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#unsignedRequest" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="70" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QNetworkRequest" signature="QNetworkRequest unsignedRequest(const QUrl &amp;endpoint) const override">
                        <parameter left="const QUrl &amp;" right="" name="endpoint" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="actionString" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::actionString" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#actionString" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString actionString() const"/>
                    <function threadsafety="unspecified" name="apiVersion" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::apiVersion" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#apiVersion" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="50" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString apiVersion() const"/>
                    <function threadsafety="unspecified" name="parameter" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::parameter" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#parameter" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="65" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVariant" signature="QVariant parameter(const QString &amp;name, const QVariant &amp;defaultValue) const">
                        <parameter left="const QString &amp;" right="" name="name" default=""/>
                        <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"/>
                    </function>
                    <function threadsafety="unspecified" name="operator==" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::operator==" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#operator-eq-eq" status="active" access="public" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="55" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const KinesisVideoMediaRequest &amp;other) const">
                        <parameter left="const KinesisVideoMediaRequest &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parameters" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequest::parameters" href="qtaws-kinesisvideomedia-kinesisvideomediarequest.html#parameters" status="active" access="protected" location="kinesisvideomediarequest.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest.h" lineno="66" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QVariantMap &amp;" signature="const QVariantMap &amp; parameters() const"/>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="31" bases="QtAws::Core::AwsAbstractRequestPrivate" module="QtAwsKinesisVideoMedia" brief="Private implementation for KinesisVideoMediaRequest">
                    <function threadsafety="unspecified" name="KinesisVideoMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::KinesisVideoMediaRequestPrivate" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#KinesisVideoMediaRequestPrivate" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="38" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaRequestPrivate(const KinesisVideoMediaRequest::Action action, KinesisVideoMediaRequest * const q)">
                        <parameter left="const KinesisVideoMediaRequest::Action" right="" name="action" default=""/>
                        <parameter left="KinesisVideoMediaRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaRequestPrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::KinesisVideoMediaRequestPrivate" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#KinesisVideoMediaRequestPrivate-1" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="39" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaRequestPrivate(const KinesisVideoMediaRequestPrivate &amp;other, KinesisVideoMediaRequest * const q)">
                        <parameter left="const KinesisVideoMediaRequestPrivate &amp;" right="" name="other" default=""/>
                        <parameter left="KinesisVideoMediaRequest * const" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="toString" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::toString" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#toString" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="41" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString toString(const KinesisVideoMediaRequest::Action &amp;action)">
                        <parameter left="const KinesisVideoMediaRequest::Action &amp;" right="" name="action" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="action" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::action" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#action-var" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="34" type="KinesisVideoMediaRequest::Action" static="false"/>
                    <variable threadsafety="unspecified" name="apiVersion" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::apiVersion" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#apiVersion-var" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="35" type="QString" static="false"/>
                    <variable threadsafety="unspecified" name="parameters" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaRequestPrivate::parameters" href="qtaws-kinesisvideomedia-kinesisvideomediarequestprivate.html#parameters-var" status="active" access="public" location="kinesisvideomediarequest_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediarequest_p.h" lineno="36" type="QVariantMap" static="false"/>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaResponse" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponse" href="qtaws-kinesisvideomedia-kinesisvideomediaresponse.html" status="active" access="public" location="kinesisvideomediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse.h" lineno="31" bases="QtAws::Core::AwsAbstractResponse" module="QtAwsKinesisVideoMedia" brief="Interface for KinesisVideoMedia responses">
                    <function threadsafety="unspecified" name="KinesisVideoMediaResponse" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponse::KinesisVideoMediaResponse" href="qtaws-kinesisvideomedia-kinesisvideomediaresponse.html#KinesisVideoMediaResponse-1" status="active" access="protected" location="kinesisvideomediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse.h" lineno="39" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaResponse(KinesisVideoMediaResponsePrivate * const d, QObject * const parent)">
                        <parameter left="KinesisVideoMediaResponsePrivate * const" right="" name="d" default=""/>
                        <parameter left="QObject * const" right="" name="parent" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KinesisVideoMediaResponse" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponse::KinesisVideoMediaResponse" href="qtaws-kinesisvideomedia-kinesisvideomediaresponse.html#KinesisVideoMediaResponse" status="active" access="public" location="kinesisvideomediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse.h" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaResponse(QObject * const parent)">
                        <parameter left="QObject * const" right="" name="parent" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="parseFailure" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponse::parseFailure" href="qtaws-kinesisvideomedia-kinesisvideomediaresponse.html#parseFailure" status="active" access="protected" location="kinesisvideomediaresponse.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse.h" lineno="43" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void parseFailure(QIODevice &amp;response) override">
                        <parameter left="QIODevice &amp;" right="" name="response" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KinesisVideoMediaResponsePrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponsePrivate" href="qtaws-kinesisvideomedia-kinesisvideomediaresponseprivate.html" status="active" access="public" location="kinesisvideomediaresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse_p.h" lineno="30" bases="QtAws::Core::AwsAbstractResponsePrivate" module="QtAwsKinesisVideoMedia" brief="Private implementation for KinesisVideoMediaResponse">
                    <function threadsafety="unspecified" name="KinesisVideoMediaResponsePrivate" fullname="QtAws::KinesisVideoMedia::KinesisVideoMediaResponsePrivate::KinesisVideoMediaResponsePrivate" href="qtaws-kinesisvideomedia-kinesisvideomediaresponseprivate.html#KinesisVideoMediaResponsePrivate" status="active" access="public" location="kinesisvideomediaresponse_p.h" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/kinesisvideomediaresponse_p.h" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KinesisVideoMediaResponsePrivate(KinesisVideoMediaResponse * const q)">
                        <parameter left="KinesisVideoMediaResponse * const" right="" name="q" default=""/>
                    </function>
                </class>
            </namespace>
        </namespace>
        <group name="aws-clients" href="aws-clients.html" status="internal" seen="false" title="" members="KinesisVideoMediaClient,KinesisVideoMediaClientPrivate"/>
        <group name="modules" href="modules.html" status="internal" seen="false" title="" members="QtAwsKinesisVideoMedia"/>
        <module name="QtAws" href="qtaws-module.html" status="internal" seen="false" title="" members="QtAws"/>
        <module name="QtAwsKinesisVideoMedia" href="qtawskinesisvideomedia-module.html" status="active" location="qtawskinesisvideomedia.qdoc" filepath="/home/paul/src/aws-sdk-qt/src/kinesisvideomedia/doc/qtawskinesisvideomedia.qdoc" lineno="2" seen="true" title="KinesisVideoMedia C++ Classes" module="QtAwsKinesisVideoMedia" groups="modules" members="GetMediaRequest,GetMediaRequestPrivate,GetMediaResponse,GetMediaResponsePrivate,KinesisVideoMedia,KinesisVideoMediaClient,KinesisVideoMediaClientPrivate,KinesisVideoMediaRequest,KinesisVideoMediaRequestPrivate,KinesisVideoMediaResponse,KinesisVideoMediaResponsePrivate" brief="Provides AWS KinesisVideoMedia functionality"/>
    </namespace>
</INDEX>
